Terminals unused in grammar

   "String"
   "format"
   "startsWith"
   "endsWith"
   "longValue"
   "floatValue"
   "Variable"
   '|'
   '&'


State 0 conflicts: 3 shift/reduce
State 16 conflicts: 2 shift/reduce
State 17 conflicts: 2 shift/reduce
State 18 conflicts: 2 shift/reduce
State 19 conflicts: 2 shift/reduce
State 42 conflicts: 2 shift/reduce
State 43 conflicts: 2 shift/reduce
State 44 conflicts: 2 shift/reduce
State 45 conflicts: 2 shift/reduce
State 46 conflicts: 2 shift/reduce
State 47 conflicts: 2 shift/reduce
State 48 conflicts: 2 shift/reduce
State 49 conflicts: 2 shift/reduce
State 50 conflicts: 2 shift/reduce
State 51 conflicts: 2 shift/reduce
State 52 conflicts: 2 shift/reduce
State 53 conflicts: 2 shift/reduce
State 54 conflicts: 2 shift/reduce
State 55 conflicts: 2 shift/reduce
State 56 conflicts: 2 shift/reduce
State 102 conflicts: 2 shift/reduce
State 103 conflicts: 2 shift/reduce
State 104 conflicts: 2 shift/reduce
State 105 conflicts: 2 shift/reduce
State 106 conflicts: 2 shift/reduce
State 107 conflicts: 2 shift/reduce
State 108 conflicts: 2 shift/reduce
State 109 conflicts: 2 shift/reduce
State 110 conflicts: 2 shift/reduce
State 111 conflicts: 2 shift/reduce
State 113 conflicts: 2 shift/reduce
State 114 conflicts: 2 shift/reduce
State 119 conflicts: 2 shift/reduce
State 120 conflicts: 2 shift/reduce
State 121 conflicts: 2 shift/reduce
State 122 conflicts: 2 shift/reduce
State 166 conflicts: 2 shift/reduce
State 167 conflicts: 2 shift/reduce
State 170 conflicts: 2 shift/reduce


Grammar

    0 $accept: input END

    1 input: END
    2      | term END

    3 term: expressions
    4     | generic_ops
    5     | string_ops
    6     | integer_ops
    7     | boolean_ops
    8     | double_ops
    9     | date_ops
   10     | leaf_terminals

   11 leaf_terminals: %empty
   12               | "Number"
   13               | "Literal string"
   14               | "null"
   15               | "$V{"
   16               | "$F{"
   17               | "$P{"

   18 expressions: '(' term ')'
   19            | term '+' term
   20            | term '-' term
   21            | term '*' term
   22            | term '/' term
   23            | term '^' term
   24            | term '%' term
   25            | term '>' term
   26            | term '<' term
   27            | term ">=" term
   28            | term "<=" term
   29            | term "!=" term
   30            | term "==" term
   31            | term "||" term
   32            | term "&&" term
   33            | term '?' term ':' term
   34            | '-' term
   35            | '+' term
   36            | '!' term

   37 generic_ops: term '.' "equals" '(' term ')'
   38            | term '.' "toString" '(' ')'
   39            | term '.' "intValue" '(' ')'
   40            | term '.' "to_i" '(' ')'
   41            | term '.' "to_f" '(' ')'
   42            | term '.' "doubleValue" '(' ')'
   43            | term '.' "isNaN" '(' ')'

   44 string_ops: term '.' "isEmpty" '(' ')'
   45           | term '.' "length" '(' ')'
   46           | term '.' "toUpperCase" '(' ')'
   47           | term '.' "toLowerCase" '(' ')'
   48           | term '.' "substring" '(' term ',' term ')'
   49           | term '.' "substring" '(' term ')'
   50           | term '.' "indexOf" '(' term ')'
   51           | term '.' "replace" '(' term ',' term ')'

   52 boolean_ops: "Boolean" '.' "parseBoolean" '(' term ')'
   53            | "Boolean" '.' "valueOf" '(' term ')'
   54            | "Boolean" '.' "TRUE"
   55            | "Boolean" '.' "FALSE"
   56            | "true"
   57            | "false"

   58 double_ops: "Double" '.' "valueOf" '(' term ')'
   59           | "Double" '.' "parseDouble" '(' term ')'
   60           | "Double" '.' "isNaN" '(' term ')'
   61           | "Double" '.' "toString" '(' term ')'
   62           | "Math" '.' "abs" '(' term ')'

   63 integer_ops: "Integer" '.' "valueOf" '(' term ')'
   64            | "Integer" '.' "parseInt" '(' term ')'
   65            | "Integer" '.' "toString" '(' term ')'

   66 date_ops: "new" '.' "Date" '(' ')'
   67         | "DateFormat" '.' "parse" '(' term ',' term ')'


Terminals, with rules where they appear

END (0) 0 1 2
'!' (33) 36
'%' (37) 24
'&' (38)
'(' (40) 18 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 58 59
    60 61 62 63 64 65 66 67
')' (41) 18 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 58 59
    60 61 62 63 64 65 66 67
'*' (42) 21
'+' (43) 19 35
',' (44) 48 51 67
'-' (45) 20 34
'.' (46) 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 58
    59 60 61 62 63 64 65 66 67
'/' (47) 22
':' (58) 33
'<' (60) 26
'>' (62) 25
'?' (63) 33
'^' (94) 23
'|' (124)
error (256)
"abs" (258) 62
"Double" (259) 58 59 60 61
"Boolean" (260) 52 53 54 55
"Integer" (261) 63 64 65
"String" (262)
"TRUE" (263) 54
"FALSE" (264) 55
"true" (265) 56
"false" (266) 57
"null" (267) 14
"valueOf" (268) 53 58 63
"parseDouble" (269) 59
"parseBoolean" (270) 52
"parseInt" (271) 64
"parse" (272) 67
"isEmpty" (273) 44
"length" (274) 45
"toUpperCase" (275) 46
"toLowerCase" (276) 47
"replace" (277) 51
"equals" (278) 37
"substring" (279) 48 49
"format" (280)
"startsWith" (281)
"endsWith" (282)
"indexOf" (283) 50
"toString" (284) 38 61 65
"intValue" (285) 39
"longValue" (286)
"doubleValue" (287) 42
"floatValue" (288)
"to_i" (289) 40
"to_f" (290) 41
"isNaN" (291) 43 60
"Math" (292) 62
"Number" (293) 12
"Variable" (294)
"Literal string" (295) 13
"<=" (296) 28
">=" (297) 27
"!=" (298) 29
"==" (299) 30
"||" (300) 31
"&&" (301) 32
"$V{" (302) 15
"$P{" (303) 17
"$F{" (304) 16
"new" (305) 66
"Date" (306) 66
"DateFormat" (307) 67
UMINUS (308)
UPLUS (309)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
input (73)
    on left: 1 2, on right: 0
term (74)
    on left: 3 4 5 6 7 8 9 10, on right: 2 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    47 48 49 50 51 52 53 58 59 60 61 62 63 64 65 67
leaf_terminals (75)
    on left: 11 12 13 14 15 16 17, on right: 10
expressions (76)
    on left: 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
    36, on right: 3
generic_ops (77)
    on left: 37 38 39 40 41 42 43, on right: 4
string_ops (78)
    on left: 44 45 46 47 48 49 50 51, on right: 5
boolean_ops (79)
    on left: 52 53 54 55 56 57, on right: 7
double_ops (80)
    on left: 58 59 60 61 62, on right: 8
integer_ops (81)
    on left: 63 64 65, on right: 6
date_ops (82)
    on left: 66 67, on right: 9


State 0

    0 $accept: . input END

    END               shift, and go to state 1
    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    END       [reduce using rule 11 (leaf_terminals)]
    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    input           go to state 20
    term            go to state 21
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 1

    1 input: END .

    $default  reduce using rule 1 (input)


State 2

   58 double_ops: "Double" . '.' "valueOf" '(' term ')'
   59           | "Double" . '.' "parseDouble" '(' term ')'
   60           | "Double" . '.' "isNaN" '(' term ')'
   61           | "Double" . '.' "toString" '(' term ')'

    '.'  shift, and go to state 30


State 3

   52 boolean_ops: "Boolean" . '.' "parseBoolean" '(' term ')'
   53            | "Boolean" . '.' "valueOf" '(' term ')'
   54            | "Boolean" . '.' "TRUE"
   55            | "Boolean" . '.' "FALSE"

    '.'  shift, and go to state 31


State 4

   63 integer_ops: "Integer" . '.' "valueOf" '(' term ')'
   64            | "Integer" . '.' "parseInt" '(' term ')'
   65            | "Integer" . '.' "toString" '(' term ')'

    '.'  shift, and go to state 32


State 5

   56 boolean_ops: "true" .

    $default  reduce using rule 56 (boolean_ops)


State 6

   57 boolean_ops: "false" .

    $default  reduce using rule 57 (boolean_ops)


State 7

   14 leaf_terminals: "null" .

    $default  reduce using rule 14 (leaf_terminals)


State 8

   62 double_ops: "Math" . '.' "abs" '(' term ')'

    '.'  shift, and go to state 33


State 9

   12 leaf_terminals: "Number" .

    $default  reduce using rule 12 (leaf_terminals)


State 10

   13 leaf_terminals: "Literal string" .

    $default  reduce using rule 13 (leaf_terminals)


State 11

   15 leaf_terminals: "$V{" .

    $default  reduce using rule 15 (leaf_terminals)


State 12

   17 leaf_terminals: "$P{" .

    $default  reduce using rule 17 (leaf_terminals)


State 13

   16 leaf_terminals: "$F{" .

    $default  reduce using rule 16 (leaf_terminals)


State 14

   66 date_ops: "new" . '.' "Date" '(' ')'

    '.'  shift, and go to state 34


State 15

   67 date_ops: "DateFormat" . '.' "parse" '(' term ',' term ')'

    '.'  shift, and go to state 35


State 16

   34 expressions: '-' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 36
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 17

   35 expressions: '+' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 37
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 18

   36 expressions: '!' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 38
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 19

   18 expressions: '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 39
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 20

    0 $accept: input . END

    END  shift, and go to state 40


State 21

    2 input: term . END
   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    END   shift, and go to state 41
    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57


State 22

   10 term: leaf_terminals .

    $default  reduce using rule 10 (term)


State 23

    3 term: expressions .

    $default  reduce using rule 3 (term)


State 24

    4 term: generic_ops .

    $default  reduce using rule 4 (term)


State 25

    5 term: string_ops .

    $default  reduce using rule 5 (term)


State 26

    7 term: boolean_ops .

    $default  reduce using rule 7 (term)


State 27

    8 term: double_ops .

    $default  reduce using rule 8 (term)


State 28

    6 term: integer_ops .

    $default  reduce using rule 6 (term)


State 29

    9 term: date_ops .

    $default  reduce using rule 9 (term)


State 30

   58 double_ops: "Double" '.' . "valueOf" '(' term ')'
   59           | "Double" '.' . "parseDouble" '(' term ')'
   60           | "Double" '.' . "isNaN" '(' term ')'
   61           | "Double" '.' . "toString" '(' term ')'

    "valueOf"      shift, and go to state 58
    "parseDouble"  shift, and go to state 59
    "toString"     shift, and go to state 60
    "isNaN"        shift, and go to state 61


State 31

   52 boolean_ops: "Boolean" '.' . "parseBoolean" '(' term ')'
   53            | "Boolean" '.' . "valueOf" '(' term ')'
   54            | "Boolean" '.' . "TRUE"
   55            | "Boolean" '.' . "FALSE"

    "TRUE"          shift, and go to state 62
    "FALSE"         shift, and go to state 63
    "valueOf"       shift, and go to state 64
    "parseBoolean"  shift, and go to state 65


State 32

   63 integer_ops: "Integer" '.' . "valueOf" '(' term ')'
   64            | "Integer" '.' . "parseInt" '(' term ')'
   65            | "Integer" '.' . "toString" '(' term ')'

    "valueOf"   shift, and go to state 66
    "parseInt"  shift, and go to state 67
    "toString"  shift, and go to state 68


State 33

   62 double_ops: "Math" '.' . "abs" '(' term ')'

    "abs"  shift, and go to state 69


State 34

   66 date_ops: "new" '.' . "Date" '(' ')'

    "Date"  shift, and go to state 70


State 35

   67 date_ops: "DateFormat" '.' . "parse" '(' term ',' term ')'

    "parse"  shift, and go to state 71


State 36

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   34            | '-' term .
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 57

    $default  reduce using rule 34 (expressions)


State 37

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   35            | '+' term .
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 57

    $default  reduce using rule 35 (expressions)


State 38

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   36            | '!' term .
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 57

    $default  reduce using rule 36 (expressions)


State 39

   18 expressions: '(' term . ')'
   19            | term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 72


State 40

    0 $accept: input END .

    $default  accept


State 41

    2 input: term END .

    $default  reduce using rule 2 (input)


State 42

   28 expressions: term "<=" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 73
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 43

   27 expressions: term ">=" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 74
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 44

   29 expressions: term "!=" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 75
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 45

   30 expressions: term "==" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 76
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 46

   31 expressions: term "||" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 77
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 47

   32 expressions: term "&&" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 78
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 48

   33 expressions: term '?' . term ':' term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 79
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 49

   23 expressions: term '^' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 80
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 50

   26 expressions: term '<' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 81
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 51

   25 expressions: term '>' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 82
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 52

   20 expressions: term '-' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 83
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 53

   19 expressions: term '+' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 84
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 54

   21 expressions: term '*' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 85
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 55

   22 expressions: term '/' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 86
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 56

   24 expressions: term '%' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 87
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 57

   37 generic_ops: term '.' . "equals" '(' term ')'
   38            | term '.' . "toString" '(' ')'
   39            | term '.' . "intValue" '(' ')'
   40            | term '.' . "to_i" '(' ')'
   41            | term '.' . "to_f" '(' ')'
   42            | term '.' . "doubleValue" '(' ')'
   43            | term '.' . "isNaN" '(' ')'
   44 string_ops: term '.' . "isEmpty" '(' ')'
   45           | term '.' . "length" '(' ')'
   46           | term '.' . "toUpperCase" '(' ')'
   47           | term '.' . "toLowerCase" '(' ')'
   48           | term '.' . "substring" '(' term ',' term ')'
   49           | term '.' . "substring" '(' term ')'
   50           | term '.' . "indexOf" '(' term ')'
   51           | term '.' . "replace" '(' term ',' term ')'

    "isEmpty"      shift, and go to state 88
    "length"       shift, and go to state 89
    "toUpperCase"  shift, and go to state 90
    "toLowerCase"  shift, and go to state 91
    "replace"      shift, and go to state 92
    "equals"       shift, and go to state 93
    "substring"    shift, and go to state 94
    "indexOf"      shift, and go to state 95
    "toString"     shift, and go to state 96
    "intValue"     shift, and go to state 97
    "doubleValue"  shift, and go to state 98
    "to_i"         shift, and go to state 99
    "to_f"         shift, and go to state 100
    "isNaN"        shift, and go to state 101


State 58

   58 double_ops: "Double" '.' "valueOf" . '(' term ')'

    '('  shift, and go to state 102


State 59

   59 double_ops: "Double" '.' "parseDouble" . '(' term ')'

    '('  shift, and go to state 103


State 60

   61 double_ops: "Double" '.' "toString" . '(' term ')'

    '('  shift, and go to state 104


State 61

   60 double_ops: "Double" '.' "isNaN" . '(' term ')'

    '('  shift, and go to state 105


State 62

   54 boolean_ops: "Boolean" '.' "TRUE" .

    $default  reduce using rule 54 (boolean_ops)


State 63

   55 boolean_ops: "Boolean" '.' "FALSE" .

    $default  reduce using rule 55 (boolean_ops)


State 64

   53 boolean_ops: "Boolean" '.' "valueOf" . '(' term ')'

    '('  shift, and go to state 106


State 65

   52 boolean_ops: "Boolean" '.' "parseBoolean" . '(' term ')'

    '('  shift, and go to state 107


State 66

   63 integer_ops: "Integer" '.' "valueOf" . '(' term ')'

    '('  shift, and go to state 108


State 67

   64 integer_ops: "Integer" '.' "parseInt" . '(' term ')'

    '('  shift, and go to state 109


State 68

   65 integer_ops: "Integer" '.' "toString" . '(' term ')'

    '('  shift, and go to state 110


State 69

   62 double_ops: "Math" '.' "abs" . '(' term ')'

    '('  shift, and go to state 111


State 70

   66 date_ops: "new" '.' "Date" . '(' ')'

    '('  shift, and go to state 112


State 71

   67 date_ops: "DateFormat" '.' "parse" . '(' term ',' term ')'

    '('  shift, and go to state 113


State 72

   18 expressions: '(' term ')' .

    $default  reduce using rule 18 (expressions)


State 73

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   28            | term "<=" term .
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '-'  shift, and go to state 52
    '+'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '%'  shift, and go to state 56
    '.'  shift, and go to state 57

    $default  reduce using rule 28 (expressions)


State 74

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   27            | term ">=" term .
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '-'  shift, and go to state 52
    '+'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '%'  shift, and go to state 56
    '.'  shift, and go to state 57

    $default  reduce using rule 27 (expressions)


State 75

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   29            | term "!=" term .
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57

    $default  reduce using rule 29 (expressions)


State 76

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   30            | term "==" term .
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57

    $default  reduce using rule 30 (expressions)


State 77

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   31            | term "||" term .
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "&&"  shift, and go to state 47
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57

    $default  reduce using rule 31 (expressions)


State 78

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   32            | term "&&" term .
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57

    $default  reduce using rule 32 (expressions)


State 79

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   33            | term '?' term . ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    ':'   shift, and go to state 114
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57


State 80

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   23            | term '^' term .
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57

    $default  reduce using rule 23 (expressions)


State 81

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   26            | term '<' term .
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '-'  shift, and go to state 52
    '+'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '%'  shift, and go to state 56
    '.'  shift, and go to state 57

    $default  reduce using rule 26 (expressions)


State 82

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   25            | term '>' term .
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '-'  shift, and go to state 52
    '+'  shift, and go to state 53
    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '%'  shift, and go to state 56
    '.'  shift, and go to state 57

    $default  reduce using rule 25 (expressions)


State 83

   19 expressions: term . '+' term
   20            | term . '-' term
   20            | term '-' term .
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '%'  shift, and go to state 56
    '.'  shift, and go to state 57

    $default  reduce using rule 20 (expressions)


State 84

   19 expressions: term . '+' term
   19            | term '+' term .
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '*'  shift, and go to state 54
    '/'  shift, and go to state 55
    '%'  shift, and go to state 56
    '.'  shift, and go to state 57

    $default  reduce using rule 19 (expressions)


State 85

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   21            | term '*' term .
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 57

    $default  reduce using rule 21 (expressions)


State 86

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   22            | term '/' term .
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 57

    $default  reduce using rule 22 (expressions)


State 87

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   24            | term '%' term .
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 57

    $default  reduce using rule 24 (expressions)


State 88

   44 string_ops: term '.' "isEmpty" . '(' ')'

    '('  shift, and go to state 115


State 89

   45 string_ops: term '.' "length" . '(' ')'

    '('  shift, and go to state 116


State 90

   46 string_ops: term '.' "toUpperCase" . '(' ')'

    '('  shift, and go to state 117


State 91

   47 string_ops: term '.' "toLowerCase" . '(' ')'

    '('  shift, and go to state 118


State 92

   51 string_ops: term '.' "replace" . '(' term ',' term ')'

    '('  shift, and go to state 119


State 93

   37 generic_ops: term '.' "equals" . '(' term ')'

    '('  shift, and go to state 120


State 94

   48 string_ops: term '.' "substring" . '(' term ',' term ')'
   49           | term '.' "substring" . '(' term ')'

    '('  shift, and go to state 121


State 95

   50 string_ops: term '.' "indexOf" . '(' term ')'

    '('  shift, and go to state 122


State 96

   38 generic_ops: term '.' "toString" . '(' ')'

    '('  shift, and go to state 123


State 97

   39 generic_ops: term '.' "intValue" . '(' ')'

    '('  shift, and go to state 124


State 98

   42 generic_ops: term '.' "doubleValue" . '(' ')'

    '('  shift, and go to state 125


State 99

   40 generic_ops: term '.' "to_i" . '(' ')'

    '('  shift, and go to state 126


State 100

   41 generic_ops: term '.' "to_f" . '(' ')'

    '('  shift, and go to state 127


State 101

   43 generic_ops: term '.' "isNaN" . '(' ')'

    '('  shift, and go to state 128


State 102

   58 double_ops: "Double" '.' "valueOf" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 129
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 103

   59 double_ops: "Double" '.' "parseDouble" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 130
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 104

   61 double_ops: "Double" '.' "toString" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 131
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 105

   60 double_ops: "Double" '.' "isNaN" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 132
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 106

   53 boolean_ops: "Boolean" '.' "valueOf" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 133
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 107

   52 boolean_ops: "Boolean" '.' "parseBoolean" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 134
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 108

   63 integer_ops: "Integer" '.' "valueOf" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 135
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 109

   64 integer_ops: "Integer" '.' "parseInt" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 136
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 110

   65 integer_ops: "Integer" '.' "toString" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 137
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 111

   62 double_ops: "Math" '.' "abs" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 138
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 112

   66 date_ops: "new" '.' "Date" '(' . ')'

    ')'  shift, and go to state 139


State 113

   67 date_ops: "DateFormat" '.' "parse" '(' . term ',' term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 140
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 114

   33 expressions: term '?' term ':' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 141
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 115

   44 string_ops: term '.' "isEmpty" '(' . ')'

    ')'  shift, and go to state 142


State 116

   45 string_ops: term '.' "length" '(' . ')'

    ')'  shift, and go to state 143


State 117

   46 string_ops: term '.' "toUpperCase" '(' . ')'

    ')'  shift, and go to state 144


State 118

   47 string_ops: term '.' "toLowerCase" '(' . ')'

    ')'  shift, and go to state 145


State 119

   51 string_ops: term '.' "replace" '(' . term ',' term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 146
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 120

   37 generic_ops: term '.' "equals" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 147
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 121

   48 string_ops: term '.' "substring" '(' . term ',' term ')'
   49           | term '.' "substring" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 148
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 122

   50 string_ops: term '.' "indexOf" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 149
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 123

   38 generic_ops: term '.' "toString" '(' . ')'

    ')'  shift, and go to state 150


State 124

   39 generic_ops: term '.' "intValue" '(' . ')'

    ')'  shift, and go to state 151


State 125

   42 generic_ops: term '.' "doubleValue" '(' . ')'

    ')'  shift, and go to state 152


State 126

   40 generic_ops: term '.' "to_i" '(' . ')'

    ')'  shift, and go to state 153


State 127

   41 generic_ops: term '.' "to_f" '(' . ')'

    ')'  shift, and go to state 154


State 128

   43 generic_ops: term '.' "isNaN" '(' . ')'

    ')'  shift, and go to state 155


State 129

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   58 double_ops: "Double" '.' "valueOf" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 156


State 130

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   59 double_ops: "Double" '.' "parseDouble" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 157


State 131

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   61 double_ops: "Double" '.' "toString" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 158


State 132

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   60 double_ops: "Double" '.' "isNaN" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 159


State 133

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   53 boolean_ops: "Boolean" '.' "valueOf" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 160


State 134

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   52 boolean_ops: "Boolean" '.' "parseBoolean" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 161


State 135

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   63 integer_ops: "Integer" '.' "valueOf" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 162


State 136

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   64 integer_ops: "Integer" '.' "parseInt" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 163


State 137

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   65 integer_ops: "Integer" '.' "toString" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 164


State 138

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   62 double_ops: "Math" '.' "abs" '(' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 165


State 139

   66 date_ops: "new" '.' "Date" '(' ')' .

    $default  reduce using rule 66 (date_ops)


State 140

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   67 date_ops: "DateFormat" '.' "parse" '(' term . ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ','   shift, and go to state 166


State 141

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   33            | term '?' term ':' term .
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57

    $default  reduce using rule 33 (expressions)


State 142

   44 string_ops: term '.' "isEmpty" '(' ')' .

    $default  reduce using rule 44 (string_ops)


State 143

   45 string_ops: term '.' "length" '(' ')' .

    $default  reduce using rule 45 (string_ops)


State 144

   46 string_ops: term '.' "toUpperCase" '(' ')' .

    $default  reduce using rule 46 (string_ops)


State 145

   47 string_ops: term '.' "toLowerCase" '(' ')' .

    $default  reduce using rule 47 (string_ops)


State 146

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   51           | term '.' "replace" '(' term . ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ','   shift, and go to state 167


State 147

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   37            | term '.' "equals" '(' term . ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 168


State 148

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   48           | term '.' "substring" '(' term . ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   49           | term '.' "substring" '(' term . ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 169
    ','   shift, and go to state 170


State 149

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   50           | term '.' "indexOf" '(' term . ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 171


State 150

   38 generic_ops: term '.' "toString" '(' ')' .

    $default  reduce using rule 38 (generic_ops)


State 151

   39 generic_ops: term '.' "intValue" '(' ')' .

    $default  reduce using rule 39 (generic_ops)


State 152

   42 generic_ops: term '.' "doubleValue" '(' ')' .

    $default  reduce using rule 42 (generic_ops)


State 153

   40 generic_ops: term '.' "to_i" '(' ')' .

    $default  reduce using rule 40 (generic_ops)


State 154

   41 generic_ops: term '.' "to_f" '(' ')' .

    $default  reduce using rule 41 (generic_ops)


State 155

   43 generic_ops: term '.' "isNaN" '(' ')' .

    $default  reduce using rule 43 (generic_ops)


State 156

   58 double_ops: "Double" '.' "valueOf" '(' term ')' .

    $default  reduce using rule 58 (double_ops)


State 157

   59 double_ops: "Double" '.' "parseDouble" '(' term ')' .

    $default  reduce using rule 59 (double_ops)


State 158

   61 double_ops: "Double" '.' "toString" '(' term ')' .

    $default  reduce using rule 61 (double_ops)


State 159

   60 double_ops: "Double" '.' "isNaN" '(' term ')' .

    $default  reduce using rule 60 (double_ops)


State 160

   53 boolean_ops: "Boolean" '.' "valueOf" '(' term ')' .

    $default  reduce using rule 53 (boolean_ops)


State 161

   52 boolean_ops: "Boolean" '.' "parseBoolean" '(' term ')' .

    $default  reduce using rule 52 (boolean_ops)


State 162

   63 integer_ops: "Integer" '.' "valueOf" '(' term ')' .

    $default  reduce using rule 63 (integer_ops)


State 163

   64 integer_ops: "Integer" '.' "parseInt" '(' term ')' .

    $default  reduce using rule 64 (integer_ops)


State 164

   65 integer_ops: "Integer" '.' "toString" '(' term ')' .

    $default  reduce using rule 65 (integer_ops)


State 165

   62 double_ops: "Math" '.' "abs" '(' term ')' .

    $default  reduce using rule 62 (double_ops)


State 166

   67 date_ops: "DateFormat" '.' "parse" '(' term ',' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 172
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 167

   51 string_ops: term '.' "replace" '(' term ',' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 173
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 168

   37 generic_ops: term '.' "equals" '(' term ')' .

    $default  reduce using rule 37 (generic_ops)


State 169

   49 string_ops: term '.' "substring" '(' term ')' .

    $default  reduce using rule 49 (string_ops)


State 170

   48 string_ops: term '.' "substring" '(' term ',' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    "new"             shift, and go to state 14
    "DateFormat"      shift, and go to state 15
    '-'               shift, and go to state 16
    '+'               shift, and go to state 17
    '!'               shift, and go to state 18
    '('               shift, and go to state 19

    '-'       [reduce using rule 11 (leaf_terminals)]
    '+'       [reduce using rule 11 (leaf_terminals)]
    $default  reduce using rule 11 (leaf_terminals)

    term            go to state 174
    leaf_terminals  go to state 22
    expressions     go to state 23
    generic_ops     go to state 24
    string_ops      go to state 25
    boolean_ops     go to state 26
    double_ops      go to state 27
    integer_ops     go to state 28
    date_ops        go to state 29


State 171

   50 string_ops: term '.' "indexOf" '(' term ')' .

    $default  reduce using rule 50 (string_ops)


State 172

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   67 date_ops: "DateFormat" '.' "parse" '(' term ',' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 175


State 173

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'
   51           | term '.' "replace" '(' term ',' term . ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 176


State 174

   19 expressions: term . '+' term
   20            | term . '-' term
   21            | term . '*' term
   22            | term . '/' term
   23            | term . '^' term
   24            | term . '%' term
   25            | term . '>' term
   26            | term . '<' term
   27            | term . ">=" term
   28            | term . "<=" term
   29            | term . "!=" term
   30            | term . "==" term
   31            | term . "||" term
   32            | term . "&&" term
   33            | term . '?' term ':' term
   37 generic_ops: term . '.' "equals" '(' term ')'
   38            | term . '.' "toString" '(' ')'
   39            | term . '.' "intValue" '(' ')'
   40            | term . '.' "to_i" '(' ')'
   41            | term . '.' "to_f" '(' ')'
   42            | term . '.' "doubleValue" '(' ')'
   43            | term . '.' "isNaN" '(' ')'
   44 string_ops: term . '.' "isEmpty" '(' ')'
   45           | term . '.' "length" '(' ')'
   46           | term . '.' "toUpperCase" '(' ')'
   47           | term . '.' "toLowerCase" '(' ')'
   48           | term . '.' "substring" '(' term ',' term ')'
   48           | term '.' "substring" '(' term ',' term . ')'
   49           | term . '.' "substring" '(' term ')'
   50           | term . '.' "indexOf" '(' term ')'
   51           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 42
    ">="  shift, and go to state 43
    "!="  shift, and go to state 44
    "=="  shift, and go to state 45
    "||"  shift, and go to state 46
    "&&"  shift, and go to state 47
    '?'   shift, and go to state 48
    '^'   shift, and go to state 49
    '<'   shift, and go to state 50
    '>'   shift, and go to state 51
    '-'   shift, and go to state 52
    '+'   shift, and go to state 53
    '*'   shift, and go to state 54
    '/'   shift, and go to state 55
    '%'   shift, and go to state 56
    '.'   shift, and go to state 57
    ')'   shift, and go to state 177


State 175

   67 date_ops: "DateFormat" '.' "parse" '(' term ',' term ')' .

    $default  reduce using rule 67 (date_ops)


State 176

   51 string_ops: term '.' "replace" '(' term ',' term ')' .

    $default  reduce using rule 51 (string_ops)


State 177

   48 string_ops: term '.' "substring" '(' term ',' term ')' .

    $default  reduce using rule 48 (string_ops)
