Terminals unused in grammar

   "String"
   "parse"
   "format"
   "startsWith"
   "endsWith"
   "longValue"
   "floatValue"
   "Variable"
   "new"
   "Date"
   "DateFormat"
   '|'
   '&'


Grammar

    0 $accept: input END

    1 input: END
    2      | term END

    3 term: expressions
    4     | generic_ops
    5     | string_ops
    6     | integer_ops
    7     | boolean_ops
    8     | double_ops
    9     | leaf_terminals

   10 leaf_terminals: "Number"
   11               | "Literal string"
   12               | "null"
   13               | "$V{"
   14               | "$F{"
   15               | "$P{"

   16 expressions: '(' term ')'
   17            | term '+' term
   18            | term '-' term
   19            | term '*' term
   20            | term '/' term
   21            | term '^' term
   22            | term '%' term
   23            | term '>' term
   24            | term '<' term
   25            | term ">=" term
   26            | term "<=" term
   27            | term "!=" term
   28            | term "==" term
   29            | term "||" term
   30            | term "&&" term
   31            | term '?' term ':' term
   32            | '-' term
   33            | '+' term
   34            | '!' term

   35 generic_ops: term '.' "equals" '(' term ')'
   36            | term '.' "toString" '(' ')'
   37            | term '.' "intValue" '(' ')'
   38            | term '.' "to_i" '(' ')'
   39            | term '.' "to_f" '(' ')'
   40            | term '.' "doubleValue" '(' ')'
   41            | term '.' "isNaN" '(' ')'

   42 string_ops: term '.' "isEmpty" '(' ')'
   43           | term '.' "length" '(' ')'
   44           | term '.' "toUpperCase" '(' ')'
   45           | term '.' "toLowerCase" '(' ')'
   46           | term '.' "substring" '(' term ',' term ')'
   47           | term '.' "substring" '(' term ')'
   48           | term '.' "indexOf" '(' term ')'
   49           | term '.' "replace" '(' term ',' term ')'

   50 boolean_ops: "Boolean" '.' "parseBoolean" '(' term ')'
   51            | "Boolean" '.' "valueOf" '(' term ')'
   52            | "Boolean" '.' "TRUE"
   53            | "Boolean" '.' "FALSE"
   54            | "true"
   55            | "false"

   56 double_ops: "Double" '.' "valueOf" '(' term ')'
   57           | "Double" '.' "parseDouble" '(' term ')'
   58           | "Double" '.' "isNaN" '(' term ')'
   59           | "Double" '.' "toString" '(' term ')'
   60           | "Math" '.' "abs" '(' term ')'

   61 integer_ops: "Integer" '.' "valueOf" '(' term ')'
   62            | "Integer" '.' "parseInt" '(' term ')'
   63            | "Integer" '.' "toString" '(' term ')'


Terminals, with rules where they appear

END (0) 0 1 2
'!' (33) 34
'%' (37) 22
'&' (38)
'(' (40) 16 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 56 57
    58 59 60 61 62 63
')' (41) 16 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 56 57
    58 59 60 61 62 63
'*' (42) 19
'+' (43) 17 33
',' (44) 46 49
'-' (45) 18 32
'.' (46) 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 56
    57 58 59 60 61 62 63
'/' (47) 20
':' (58) 31
'<' (60) 24
'>' (62) 23
'?' (63) 31
'^' (94) 21
'|' (124)
error (256)
"abs" (258) 60
"Double" (259) 56 57 58 59
"Boolean" (260) 50 51 52 53
"Integer" (261) 61 62 63
"String" (262)
"TRUE" (263) 52
"FALSE" (264) 53
"true" (265) 54
"false" (266) 55
"null" (267) 12
"valueOf" (268) 51 56 61
"parseDouble" (269) 57
"parseBoolean" (270) 50
"parseInt" (271) 62
"parse" (272)
"isEmpty" (273) 42
"length" (274) 43
"toUpperCase" (275) 44
"toLowerCase" (276) 45
"replace" (277) 49
"equals" (278) 35
"substring" (279) 46 47
"format" (280)
"startsWith" (281)
"endsWith" (282)
"indexOf" (283) 48
"toString" (284) 36 59 63
"intValue" (285) 37
"longValue" (286)
"doubleValue" (287) 40
"floatValue" (288)
"to_i" (289) 38
"to_f" (290) 39
"isNaN" (291) 41 58
"Math" (292) 60
"Number" (293) 10
"Variable" (294)
"Literal string" (295) 11
"<=" (296) 26
">=" (297) 25
"!=" (298) 27
"==" (299) 28
"||" (300) 29
"&&" (301) 30
"$V{" (302) 13
"$P{" (303) 15
"$F{" (304) 14
"new" (305)
"Date" (306)
"DateFormat" (307)
UMINUS (308)
UPLUS (309)


Nonterminals, with rules where they appear

$accept (72)
    on left: 0
input (73)
    on left: 1 2, on right: 0
term (74)
    on left: 3 4 5 6 7 8 9, on right: 2 16 17 18 19 20 21 22 23 24
    25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
    46 47 48 49 50 51 56 57 58 59 60 61 62 63
leaf_terminals (75)
    on left: 10 11 12 13 14 15, on right: 9
expressions (76)
    on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
    34, on right: 3
generic_ops (77)
    on left: 35 36 37 38 39 40 41, on right: 4
string_ops (78)
    on left: 42 43 44 45 46 47 48 49, on right: 5
boolean_ops (79)
    on left: 50 51 52 53 54 55, on right: 7
double_ops (80)
    on left: 56 57 58 59 60, on right: 8
integer_ops (81)
    on left: 61 62 63, on right: 6


State 0

    0 $accept: . input END

    END               shift, and go to state 1
    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    input           go to state 18
    term            go to state 19
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 1

    1 input: END .

    $default  reduce using rule 1 (input)


State 2

   56 double_ops: "Double" . '.' "valueOf" '(' term ')'
   57           | "Double" . '.' "parseDouble" '(' term ')'
   58           | "Double" . '.' "isNaN" '(' term ')'
   59           | "Double" . '.' "toString" '(' term ')'

    '.'  shift, and go to state 27


State 3

   50 boolean_ops: "Boolean" . '.' "parseBoolean" '(' term ')'
   51            | "Boolean" . '.' "valueOf" '(' term ')'
   52            | "Boolean" . '.' "TRUE"
   53            | "Boolean" . '.' "FALSE"

    '.'  shift, and go to state 28


State 4

   61 integer_ops: "Integer" . '.' "valueOf" '(' term ')'
   62            | "Integer" . '.' "parseInt" '(' term ')'
   63            | "Integer" . '.' "toString" '(' term ')'

    '.'  shift, and go to state 29


State 5

   54 boolean_ops: "true" .

    $default  reduce using rule 54 (boolean_ops)


State 6

   55 boolean_ops: "false" .

    $default  reduce using rule 55 (boolean_ops)


State 7

   12 leaf_terminals: "null" .

    $default  reduce using rule 12 (leaf_terminals)


State 8

   60 double_ops: "Math" . '.' "abs" '(' term ')'

    '.'  shift, and go to state 30


State 9

   10 leaf_terminals: "Number" .

    $default  reduce using rule 10 (leaf_terminals)


State 10

   11 leaf_terminals: "Literal string" .

    $default  reduce using rule 11 (leaf_terminals)


State 11

   13 leaf_terminals: "$V{" .

    $default  reduce using rule 13 (leaf_terminals)


State 12

   15 leaf_terminals: "$P{" .

    $default  reduce using rule 15 (leaf_terminals)


State 13

   14 leaf_terminals: "$F{" .

    $default  reduce using rule 14 (leaf_terminals)


State 14

   32 expressions: '-' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 31
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 15

   33 expressions: '+' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 32
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 16

   34 expressions: '!' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 33
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 17

   16 expressions: '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 34
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 18

    0 $accept: input . END

    END  shift, and go to state 35


State 19

    2 input: term . END
   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    END   shift, and go to state 36
    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52


State 20

    9 term: leaf_terminals .

    $default  reduce using rule 9 (term)


State 21

    3 term: expressions .

    $default  reduce using rule 3 (term)


State 22

    4 term: generic_ops .

    $default  reduce using rule 4 (term)


State 23

    5 term: string_ops .

    $default  reduce using rule 5 (term)


State 24

    7 term: boolean_ops .

    $default  reduce using rule 7 (term)


State 25

    8 term: double_ops .

    $default  reduce using rule 8 (term)


State 26

    6 term: integer_ops .

    $default  reduce using rule 6 (term)


State 27

   56 double_ops: "Double" '.' . "valueOf" '(' term ')'
   57           | "Double" '.' . "parseDouble" '(' term ')'
   58           | "Double" '.' . "isNaN" '(' term ')'
   59           | "Double" '.' . "toString" '(' term ')'

    "valueOf"      shift, and go to state 53
    "parseDouble"  shift, and go to state 54
    "toString"     shift, and go to state 55
    "isNaN"        shift, and go to state 56


State 28

   50 boolean_ops: "Boolean" '.' . "parseBoolean" '(' term ')'
   51            | "Boolean" '.' . "valueOf" '(' term ')'
   52            | "Boolean" '.' . "TRUE"
   53            | "Boolean" '.' . "FALSE"

    "TRUE"          shift, and go to state 57
    "FALSE"         shift, and go to state 58
    "valueOf"       shift, and go to state 59
    "parseBoolean"  shift, and go to state 60


State 29

   61 integer_ops: "Integer" '.' . "valueOf" '(' term ')'
   62            | "Integer" '.' . "parseInt" '(' term ')'
   63            | "Integer" '.' . "toString" '(' term ')'

    "valueOf"   shift, and go to state 61
    "parseInt"  shift, and go to state 62
    "toString"  shift, and go to state 63


State 30

   60 double_ops: "Math" '.' . "abs" '(' term ')'

    "abs"  shift, and go to state 64


State 31

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   32            | '-' term .
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 52

    $default  reduce using rule 32 (expressions)


State 32

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   33            | '+' term .
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 52

    $default  reduce using rule 33 (expressions)


State 33

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   34            | '!' term .
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 52

    $default  reduce using rule 34 (expressions)


State 34

   16 expressions: '(' term . ')'
   17            | term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 65


State 35

    0 $accept: input END .

    $default  accept


State 36

    2 input: term END .

    $default  reduce using rule 2 (input)


State 37

   26 expressions: term "<=" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 66
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 38

   25 expressions: term ">=" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 67
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 39

   27 expressions: term "!=" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 68
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 40

   28 expressions: term "==" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 69
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 41

   29 expressions: term "||" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 70
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 42

   30 expressions: term "&&" . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 71
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 43

   31 expressions: term '?' . term ':' term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 72
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 44

   21 expressions: term '^' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 73
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 45

   24 expressions: term '<' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 74
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 46

   23 expressions: term '>' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 75
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 47

   18 expressions: term '-' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 76
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 48

   17 expressions: term '+' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 77
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 49

   19 expressions: term '*' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 78
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 50

   20 expressions: term '/' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 79
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 51

   22 expressions: term '%' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 80
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 52

   35 generic_ops: term '.' . "equals" '(' term ')'
   36            | term '.' . "toString" '(' ')'
   37            | term '.' . "intValue" '(' ')'
   38            | term '.' . "to_i" '(' ')'
   39            | term '.' . "to_f" '(' ')'
   40            | term '.' . "doubleValue" '(' ')'
   41            | term '.' . "isNaN" '(' ')'
   42 string_ops: term '.' . "isEmpty" '(' ')'
   43           | term '.' . "length" '(' ')'
   44           | term '.' . "toUpperCase" '(' ')'
   45           | term '.' . "toLowerCase" '(' ')'
   46           | term '.' . "substring" '(' term ',' term ')'
   47           | term '.' . "substring" '(' term ')'
   48           | term '.' . "indexOf" '(' term ')'
   49           | term '.' . "replace" '(' term ',' term ')'

    "isEmpty"      shift, and go to state 81
    "length"       shift, and go to state 82
    "toUpperCase"  shift, and go to state 83
    "toLowerCase"  shift, and go to state 84
    "replace"      shift, and go to state 85
    "equals"       shift, and go to state 86
    "substring"    shift, and go to state 87
    "indexOf"      shift, and go to state 88
    "toString"     shift, and go to state 89
    "intValue"     shift, and go to state 90
    "doubleValue"  shift, and go to state 91
    "to_i"         shift, and go to state 92
    "to_f"         shift, and go to state 93
    "isNaN"        shift, and go to state 94


State 53

   56 double_ops: "Double" '.' "valueOf" . '(' term ')'

    '('  shift, and go to state 95


State 54

   57 double_ops: "Double" '.' "parseDouble" . '(' term ')'

    '('  shift, and go to state 96


State 55

   59 double_ops: "Double" '.' "toString" . '(' term ')'

    '('  shift, and go to state 97


State 56

   58 double_ops: "Double" '.' "isNaN" . '(' term ')'

    '('  shift, and go to state 98


State 57

   52 boolean_ops: "Boolean" '.' "TRUE" .

    $default  reduce using rule 52 (boolean_ops)


State 58

   53 boolean_ops: "Boolean" '.' "FALSE" .

    $default  reduce using rule 53 (boolean_ops)


State 59

   51 boolean_ops: "Boolean" '.' "valueOf" . '(' term ')'

    '('  shift, and go to state 99


State 60

   50 boolean_ops: "Boolean" '.' "parseBoolean" . '(' term ')'

    '('  shift, and go to state 100


State 61

   61 integer_ops: "Integer" '.' "valueOf" . '(' term ')'

    '('  shift, and go to state 101


State 62

   62 integer_ops: "Integer" '.' "parseInt" . '(' term ')'

    '('  shift, and go to state 102


State 63

   63 integer_ops: "Integer" '.' "toString" . '(' term ')'

    '('  shift, and go to state 103


State 64

   60 double_ops: "Math" '.' "abs" . '(' term ')'

    '('  shift, and go to state 104


State 65

   16 expressions: '(' term ')' .

    $default  reduce using rule 16 (expressions)


State 66

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   26            | term "<=" term .
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '-'  shift, and go to state 47
    '+'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51
    '.'  shift, and go to state 52

    $default  reduce using rule 26 (expressions)


State 67

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   25            | term ">=" term .
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '-'  shift, and go to state 47
    '+'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51
    '.'  shift, and go to state 52

    $default  reduce using rule 25 (expressions)


State 68

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   27            | term "!=" term .
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52

    $default  reduce using rule 27 (expressions)


State 69

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   28            | term "==" term .
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52

    $default  reduce using rule 28 (expressions)


State 70

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   29            | term "||" term .
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "&&"  shift, and go to state 42
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52

    $default  reduce using rule 29 (expressions)


State 71

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   30            | term "&&" term .
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52

    $default  reduce using rule 30 (expressions)


State 72

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   31            | term '?' term . ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    ':'   shift, and go to state 105
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52


State 73

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   21            | term '^' term .
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52

    $default  reduce using rule 21 (expressions)


State 74

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   24            | term '<' term .
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '-'  shift, and go to state 47
    '+'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51
    '.'  shift, and go to state 52

    $default  reduce using rule 24 (expressions)


State 75

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   23            | term '>' term .
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '-'  shift, and go to state 47
    '+'  shift, and go to state 48
    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51
    '.'  shift, and go to state 52

    $default  reduce using rule 23 (expressions)


State 76

   17 expressions: term . '+' term
   18            | term . '-' term
   18            | term '-' term .
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51
    '.'  shift, and go to state 52

    $default  reduce using rule 18 (expressions)


State 77

   17 expressions: term . '+' term
   17            | term '+' term .
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50
    '%'  shift, and go to state 51
    '.'  shift, and go to state 52

    $default  reduce using rule 17 (expressions)


State 78

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   19            | term '*' term .
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 52

    $default  reduce using rule 19 (expressions)


State 79

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   20            | term '/' term .
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 52

    $default  reduce using rule 20 (expressions)


State 80

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   22            | term '%' term .
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    '.'  shift, and go to state 52

    $default  reduce using rule 22 (expressions)


State 81

   42 string_ops: term '.' "isEmpty" . '(' ')'

    '('  shift, and go to state 106


State 82

   43 string_ops: term '.' "length" . '(' ')'

    '('  shift, and go to state 107


State 83

   44 string_ops: term '.' "toUpperCase" . '(' ')'

    '('  shift, and go to state 108


State 84

   45 string_ops: term '.' "toLowerCase" . '(' ')'

    '('  shift, and go to state 109


State 85

   49 string_ops: term '.' "replace" . '(' term ',' term ')'

    '('  shift, and go to state 110


State 86

   35 generic_ops: term '.' "equals" . '(' term ')'

    '('  shift, and go to state 111


State 87

   46 string_ops: term '.' "substring" . '(' term ',' term ')'
   47           | term '.' "substring" . '(' term ')'

    '('  shift, and go to state 112


State 88

   48 string_ops: term '.' "indexOf" . '(' term ')'

    '('  shift, and go to state 113


State 89

   36 generic_ops: term '.' "toString" . '(' ')'

    '('  shift, and go to state 114


State 90

   37 generic_ops: term '.' "intValue" . '(' ')'

    '('  shift, and go to state 115


State 91

   40 generic_ops: term '.' "doubleValue" . '(' ')'

    '('  shift, and go to state 116


State 92

   38 generic_ops: term '.' "to_i" . '(' ')'

    '('  shift, and go to state 117


State 93

   39 generic_ops: term '.' "to_f" . '(' ')'

    '('  shift, and go to state 118


State 94

   41 generic_ops: term '.' "isNaN" . '(' ')'

    '('  shift, and go to state 119


State 95

   56 double_ops: "Double" '.' "valueOf" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 120
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 96

   57 double_ops: "Double" '.' "parseDouble" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 121
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 97

   59 double_ops: "Double" '.' "toString" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 122
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 98

   58 double_ops: "Double" '.' "isNaN" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 123
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 99

   51 boolean_ops: "Boolean" '.' "valueOf" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 124
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 100

   50 boolean_ops: "Boolean" '.' "parseBoolean" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 125
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 101

   61 integer_ops: "Integer" '.' "valueOf" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 126
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 102

   62 integer_ops: "Integer" '.' "parseInt" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 127
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 103

   63 integer_ops: "Integer" '.' "toString" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 128
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 104

   60 double_ops: "Math" '.' "abs" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 129
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 105

   31 expressions: term '?' term ':' . term

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 130
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 106

   42 string_ops: term '.' "isEmpty" '(' . ')'

    ')'  shift, and go to state 131


State 107

   43 string_ops: term '.' "length" '(' . ')'

    ')'  shift, and go to state 132


State 108

   44 string_ops: term '.' "toUpperCase" '(' . ')'

    ')'  shift, and go to state 133


State 109

   45 string_ops: term '.' "toLowerCase" '(' . ')'

    ')'  shift, and go to state 134


State 110

   49 string_ops: term '.' "replace" '(' . term ',' term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 135
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 111

   35 generic_ops: term '.' "equals" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 136
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 112

   46 string_ops: term '.' "substring" '(' . term ',' term ')'
   47           | term '.' "substring" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 137
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 113

   48 string_ops: term '.' "indexOf" '(' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 138
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 114

   36 generic_ops: term '.' "toString" '(' . ')'

    ')'  shift, and go to state 139


State 115

   37 generic_ops: term '.' "intValue" '(' . ')'

    ')'  shift, and go to state 140


State 116

   40 generic_ops: term '.' "doubleValue" '(' . ')'

    ')'  shift, and go to state 141


State 117

   38 generic_ops: term '.' "to_i" '(' . ')'

    ')'  shift, and go to state 142


State 118

   39 generic_ops: term '.' "to_f" '(' . ')'

    ')'  shift, and go to state 143


State 119

   41 generic_ops: term '.' "isNaN" '(' . ')'

    ')'  shift, and go to state 144


State 120

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   56 double_ops: "Double" '.' "valueOf" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 145


State 121

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   57 double_ops: "Double" '.' "parseDouble" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 146


State 122

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   59 double_ops: "Double" '.' "toString" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 147


State 123

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   58 double_ops: "Double" '.' "isNaN" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 148


State 124

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   51 boolean_ops: "Boolean" '.' "valueOf" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 149


State 125

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   50 boolean_ops: "Boolean" '.' "parseBoolean" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 150


State 126

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   61 integer_ops: "Integer" '.' "valueOf" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 151


State 127

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   62 integer_ops: "Integer" '.' "parseInt" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 152


State 128

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   63 integer_ops: "Integer" '.' "toString" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 153


State 129

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   60 double_ops: "Math" '.' "abs" '(' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 154


State 130

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   31            | term '?' term ':' term .
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52

    $default  reduce using rule 31 (expressions)


State 131

   42 string_ops: term '.' "isEmpty" '(' ')' .

    $default  reduce using rule 42 (string_ops)


State 132

   43 string_ops: term '.' "length" '(' ')' .

    $default  reduce using rule 43 (string_ops)


State 133

   44 string_ops: term '.' "toUpperCase" '(' ')' .

    $default  reduce using rule 44 (string_ops)


State 134

   45 string_ops: term '.' "toLowerCase" '(' ')' .

    $default  reduce using rule 45 (string_ops)


State 135

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   49           | term '.' "replace" '(' term . ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ','   shift, and go to state 155


State 136

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   35            | term '.' "equals" '(' term . ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 156


State 137

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   46           | term '.' "substring" '(' term . ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   47           | term '.' "substring" '(' term . ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 157
    ','   shift, and go to state 158


State 138

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   48           | term '.' "indexOf" '(' term . ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 159


State 139

   36 generic_ops: term '.' "toString" '(' ')' .

    $default  reduce using rule 36 (generic_ops)


State 140

   37 generic_ops: term '.' "intValue" '(' ')' .

    $default  reduce using rule 37 (generic_ops)


State 141

   40 generic_ops: term '.' "doubleValue" '(' ')' .

    $default  reduce using rule 40 (generic_ops)


State 142

   38 generic_ops: term '.' "to_i" '(' ')' .

    $default  reduce using rule 38 (generic_ops)


State 143

   39 generic_ops: term '.' "to_f" '(' ')' .

    $default  reduce using rule 39 (generic_ops)


State 144

   41 generic_ops: term '.' "isNaN" '(' ')' .

    $default  reduce using rule 41 (generic_ops)


State 145

   56 double_ops: "Double" '.' "valueOf" '(' term ')' .

    $default  reduce using rule 56 (double_ops)


State 146

   57 double_ops: "Double" '.' "parseDouble" '(' term ')' .

    $default  reduce using rule 57 (double_ops)


State 147

   59 double_ops: "Double" '.' "toString" '(' term ')' .

    $default  reduce using rule 59 (double_ops)


State 148

   58 double_ops: "Double" '.' "isNaN" '(' term ')' .

    $default  reduce using rule 58 (double_ops)


State 149

   51 boolean_ops: "Boolean" '.' "valueOf" '(' term ')' .

    $default  reduce using rule 51 (boolean_ops)


State 150

   50 boolean_ops: "Boolean" '.' "parseBoolean" '(' term ')' .

    $default  reduce using rule 50 (boolean_ops)


State 151

   61 integer_ops: "Integer" '.' "valueOf" '(' term ')' .

    $default  reduce using rule 61 (integer_ops)


State 152

   62 integer_ops: "Integer" '.' "parseInt" '(' term ')' .

    $default  reduce using rule 62 (integer_ops)


State 153

   63 integer_ops: "Integer" '.' "toString" '(' term ')' .

    $default  reduce using rule 63 (integer_ops)


State 154

   60 double_ops: "Math" '.' "abs" '(' term ')' .

    $default  reduce using rule 60 (double_ops)


State 155

   49 string_ops: term '.' "replace" '(' term ',' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 160
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 156

   35 generic_ops: term '.' "equals" '(' term ')' .

    $default  reduce using rule 35 (generic_ops)


State 157

   47 string_ops: term '.' "substring" '(' term ')' .

    $default  reduce using rule 47 (string_ops)


State 158

   46 string_ops: term '.' "substring" '(' term ',' . term ')'

    "Double"          shift, and go to state 2
    "Boolean"         shift, and go to state 3
    "Integer"         shift, and go to state 4
    "true"            shift, and go to state 5
    "false"           shift, and go to state 6
    "null"            shift, and go to state 7
    "Math"            shift, and go to state 8
    "Number"          shift, and go to state 9
    "Literal string"  shift, and go to state 10
    "$V{"             shift, and go to state 11
    "$P{"             shift, and go to state 12
    "$F{"             shift, and go to state 13
    '-'               shift, and go to state 14
    '+'               shift, and go to state 15
    '!'               shift, and go to state 16
    '('               shift, and go to state 17

    term            go to state 161
    leaf_terminals  go to state 20
    expressions     go to state 21
    generic_ops     go to state 22
    string_ops      go to state 23
    boolean_ops     go to state 24
    double_ops      go to state 25
    integer_ops     go to state 26


State 159

   48 string_ops: term '.' "indexOf" '(' term ')' .

    $default  reduce using rule 48 (string_ops)


State 160

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'
   49           | term '.' "replace" '(' term ',' term . ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 162


State 161

   17 expressions: term . '+' term
   18            | term . '-' term
   19            | term . '*' term
   20            | term . '/' term
   21            | term . '^' term
   22            | term . '%' term
   23            | term . '>' term
   24            | term . '<' term
   25            | term . ">=" term
   26            | term . "<=" term
   27            | term . "!=" term
   28            | term . "==" term
   29            | term . "||" term
   30            | term . "&&" term
   31            | term . '?' term ':' term
   35 generic_ops: term . '.' "equals" '(' term ')'
   36            | term . '.' "toString" '(' ')'
   37            | term . '.' "intValue" '(' ')'
   38            | term . '.' "to_i" '(' ')'
   39            | term . '.' "to_f" '(' ')'
   40            | term . '.' "doubleValue" '(' ')'
   41            | term . '.' "isNaN" '(' ')'
   42 string_ops: term . '.' "isEmpty" '(' ')'
   43           | term . '.' "length" '(' ')'
   44           | term . '.' "toUpperCase" '(' ')'
   45           | term . '.' "toLowerCase" '(' ')'
   46           | term . '.' "substring" '(' term ',' term ')'
   46           | term '.' "substring" '(' term ',' term . ')'
   47           | term . '.' "substring" '(' term ')'
   48           | term . '.' "indexOf" '(' term ')'
   49           | term . '.' "replace" '(' term ',' term ')'

    "<="  shift, and go to state 37
    ">="  shift, and go to state 38
    "!="  shift, and go to state 39
    "=="  shift, and go to state 40
    "||"  shift, and go to state 41
    "&&"  shift, and go to state 42
    '?'   shift, and go to state 43
    '^'   shift, and go to state 44
    '<'   shift, and go to state 45
    '>'   shift, and go to state 46
    '-'   shift, and go to state 47
    '+'   shift, and go to state 48
    '*'   shift, and go to state 49
    '/'   shift, and go to state 50
    '%'   shift, and go to state 51
    '.'   shift, and go to state 52
    ')'   shift, and go to state 163


State 162

   49 string_ops: term '.' "replace" '(' term ',' term ')' .

    $default  reduce using rule 49 (string_ops)


State 163

   46 string_ops: term '.' "substring" '(' term ',' term ')' .

    $default  reduce using rule 46 (string_ops)
